[
["intro.html", "Fundamentals of Mathematics and Statistics with R Chapter 1 Introduction 1.1 Installing R 1.2 RStudio layout 1.3 Installing an R Package 1.4 Loading an R Packages", " Fundamentals of Mathematics and Statistics with R Dr. Priyanga D. Talagala 2020-07-09 Chapter 1 Introduction 1.1 Installing R Step 1: First download R freely from the Comprehensive R Archive Network (CRAN) https://cran.r-project.org/. (At the moment of writing, R 4.0.2 is the latest version. Choose the most recent one.) Step 2: Then install R Studio’s IDE (stands for integrated development environment), a powerful user interface for R from https://rstudio.com/products/rstudio/download/. Get the Open Source Edition of RStudio Desktop. RStudio allows you to run R in a more user-friendly environment. You need to install both R and Rstudio to use RStudio. If you have a pre-existing installation of R and/or RStudio, I highly recommend that you re install both and get as current as possible. Step 3: Then open Rstudio. 1.2 RStudio layout The RStudio interface consists of four windows (see Figure 1 and 2). Bottom left: console window (also called command window). This is where you type and run all your R commands Top left: editor window (also called script window). Top right: workspace / history window. Bottom right: Files / plots / packages / help window. Now you are familiar with the layout. Let’s begin with R basics. 1.3 Installing an R Package The primary location for obtaining R packages is CRAN Packages can be installed with the install.packages() function in R To install a single package, pass the name of the package to the install.packages() function as the first argument The following the code installs the tidyverse package from CRAN install.packages(&quot;tidyverse&quot;) This command downloads the tidyverse package from CRAN and installs it on your computer Any packages on which this package depends will also be downloaded and installed Installing the tidyverse package could take several minutes. You only need to do this once. 1.4 Loading an R Packages Installing a package does not make it immediately available to you in R; you must load the package The library() function is used to load packages into R The following code is used to load the tidyverse package into R NOTE: Do not put the package name in quotes! library(tidyverse) ## ── Attaching packages ──────────── ## ✓ ggplot2 3.3.2 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 0.8.5 ## ✓ tidyr 1.0.2 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## ── Conflicts ───────────────────── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() Some packages produce messages when they are loaded (but some don’t) "],
["differentiation.html", "Chapter 2 Differentiation 2.1 Higher Derivatives 2.2 Partial Derivatives", " Chapter 2 Differentiation First, we take the equation as an expression f &lt;- expression(x^2) To calculate first derivative of \\(f\\), we use D() function and x to specify that derivation has to be carried out with respect to \\(x\\). f_1 &lt;- D(f, &quot;x&quot;) print(f_1) ## 2 * x Sketch the graph of \\(f\\) and \\(f^\\prime\\) library(ggplot2) x &lt;- seq(-1, 1, by = 0.1) y &lt;- eval(f) x &lt;- seq(-1, 1, by = 0.1) y1 &lt;- eval(f_1) data &lt;- data.frame(x, y, y1) head(data) ## x y y1 ## 1 -1.0 1.00 -2.0 ## 2 -0.9 0.81 -1.8 ## 3 -0.8 0.64 -1.6 ## 4 -0.7 0.49 -1.4 ## 5 -0.6 0.36 -1.2 ## 6 -0.5 0.25 -1.0 p &lt;- ggplot(data, aes(x = x, y = y)) + geom_line() print(p) q &lt;- ggplot(data, aes(x = x, y = y1)) + geom_line() print(q) 2.1 Higher Derivatives The following R command can be used to find second derivative of the above \\(f\\). f_2 &lt;- D(D(f, &quot;x&quot;), &quot;x&quot;) print(f_2) ## [1] 2 x &lt;- seq(-1, 1, by = 0.1) y2 &lt;- eval(f_2) data &lt;- data.frame(x, y, y1, y2) head(data) ## x y y1 y2 ## 1 -1.0 1.00 -2.0 2 ## 2 -0.9 0.81 -1.8 2 ## 3 -0.8 0.64 -1.6 2 ## 4 -0.7 0.49 -1.4 2 ## 5 -0.6 0.36 -1.2 2 ## 6 -0.5 0.25 -1.0 2 p &lt;- ggplot(data, aes(x = x, y = y)) + geom_line() print(p) q &lt;- ggplot(data, aes(x = x, y = y1)) + geom_line(colour = &quot;red&quot;) print(q) r &lt;- ggplot(data, aes(x = x, y = y2)) + geom_line(colour = &quot;blue&quot;) print(r) 2.2 Partial Derivatives If the expression is having more than one independent variable, we can calculate differentiation with respect to each of them. f &lt;- expression(x^2 + y^2) x &lt;- y &lt;- seq(-3, 3, length = 20) surface &lt;- function(x, y) { eval(f) } z &lt;- outer(x, y, surface) persp(x, y, z) Differentiate with respect to x D(f, &quot;x&quot;) ## 2 * x Differentiate with respect to y D(f, &quot;y&quot;) ## 2 * y "],
["statistical-distributions.html", "Chapter 3 Statistical Distributions", " Chapter 3 Statistical Distributions "],
["applications.html", "Chapter 4 Applications", " Chapter 4 Applications "],
["final-words.html", "Chapter 5 Final Words", " Chapter 5 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
